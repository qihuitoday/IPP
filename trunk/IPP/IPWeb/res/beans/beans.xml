<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
    default-autowire="byName">
	<description>SSH</description>
	
	<import resource="beans-sys.xml" />
	<import resource="beans-user.xml" />
	<import resource="beans-web.xml" />
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:ssh.properties</value>
			</list>
		</property>
	</bean>

	<!-- Hibernate data source -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
		    <value>${jdbc.driver}</value>
		</property>
		<property name="url">
		    <value>${jdbc.url}</value>
		</property>
		<property name="username">
		    <value>${jdbc.username}</value>
		</property>
		<property name="password">
		    <value>${jdbc.password}</value>
		</property>
	</bean>

	<!-- Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath*:/com/qihui/ssh/dao/entities</value>  
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.query.substitutions">true '1', false '0', yes '1', no '0'</prop>
			</props>
		</property>
	</bean>

	<!-- 基本事务管理器(Hibernate)-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

    <!-- 基本事务定义(Hibernate)--> 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            <tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
	    <aop:advisor pointcut="execution(* com.qihui.ssh.service..*(..))" advice-ref="txAdvice"/>
    </aop:config>

</beans>
